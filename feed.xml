<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://panyu101.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://panyu101.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-02-28T17:09:18+00:00</updated><id>https://panyu101.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. Thanks to bogoli </subtitle><entry><title type="html">helm cli env</title><link href="https://panyu101.github.io/blog/2025/helm-cli-env/" rel="alternate" type="text/html" title="helm cli env"/><published>2025-02-25T12:04:00+00:00</published><updated>2025-02-25T12:04:00+00:00</updated><id>https://panyu101.github.io/blog/2025/helm-cli-env</id><content type="html" xml:base="https://panyu101.github.io/blog/2025/helm-cli-env/"><![CDATA[<p>If needs to run helm cli based on current repo, make sure the correct EKS settings is in place</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="nv">$KUBECONFIG</span>
/root/.kube/config.qubed-eks-prod

<span class="c"># otherwise, change it to the correct one:</span>
<span class="nv">KUBECONFIG</span><span class="o">=</span><span class="s1">'/root/.kube/config.busi-eks-demo'</span>

<span class="nb">echo</span> <span class="nv">$KUBECONFIG</span>
/root/.kube/config.busi-eks-demo
</code></pre></div></div> <p>You also need to source /opt/aws/EKS/busi-demo/.envrc, which has ALL EKS settings.</p>]]></content><author><name></name></author><category term="k8s"/><category term="apan"/><category term="tech"/><summary type="html"><![CDATA[helm cli environment setup]]></summary></entry><entry><title type="html">find file with Chinese name</title><link href="https://panyu101.github.io/blog/2025/find-file-with-Chinese-name/" rel="alternate" type="text/html" title="find file with Chinese name"/><published>2025-02-24T16:00:00+00:00</published><updated>2025-02-24T16:00:00+00:00</updated><id>https://panyu101.github.io/blog/2025/find-file-with-Chinese-name</id><content type="html" xml:base="https://panyu101.github.io/blog/2025/find-file-with-Chinese-name/"><![CDATA[<p>This example shows how to use envrc in an aws cli to go through all directories to run the same aws cli:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find /var/www/html/Pan/ <span class="nt">-type</span> f | <span class="nb">grep</span> <span class="nt">--color</span><span class="o">=</span>auto <span class="nt">-P</span> <span class="s1">'[^\x00-\x7F]'</span>

<span class="c"># or this one which also works under Alpine Linux</span>
find /var/www/html/Pan/ <span class="nt">-type</span> f | <span class="nb">grep</span> <span class="nt">--color</span><span class="o">=</span>auto <span class="s1">'[^ -~]'</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="linux"/><category term="apan"/><category term="tech"/><summary type="html"><![CDATA[Search and find a file with Chinese filename]]></summary></entry><entry><title type="html">know it from try</title><link href="https://panyu101.github.io/blog/2025/know-it-from-try/" rel="alternate" type="text/html" title="know it from try"/><published>2025-02-24T14:45:00+00:00</published><updated>2025-02-24T14:45:00+00:00</updated><id>https://panyu101.github.io/blog/2025/know-it-from-try</id><content type="html" xml:base="https://panyu101.github.io/blog/2025/know-it-from-try/"><![CDATA[<p><strong>_config.yml file defines lots of variables, and can be used as site.VAR</strong></p> <p>For example, these two variables</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>blog_name: Blog     <span class="c"># blog_name will be displayed in your blog page</span>
blog_description: a simple whitespace theme <span class="k">for </span>academics
</code></pre></div></div> <p>are used in file _post/blog.md as this way:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">blog_name_size</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="ow">or</span><span class="w"> </span><span class="nv">blog_description_size</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">0</span><span class="w"> </span><span class="cp">%}</span>

  &lt;div class="header-bar"&gt;
    &lt;h3&gt;<span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">blog_name</span><span class="w"> </span><span class="cp">}}</span>&lt;/h3&gt;
    &lt;h4&gt;<span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">blog_description</span><span class="w"> </span><span class="cp">}}</span>&lt;/h4&gt;
  &lt;/div&gt;
  <span class="cp">{%</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">%}</span>

</code></pre></div></div>]]></content><author><name></name></author><category term="web"/><category term="apan"/><category term="tech"/><summary type="html"><![CDATA[know this Al-Folio framwork from trying]]></summary></entry><entry><title type="html">git account setup with .envrc</title><link href="https://panyu101.github.io/blog/2025/git-account-setup/" rel="alternate" type="text/html" title="git account setup with .envrc"/><published>2025-02-24T10:00:00+00:00</published><updated>2025-02-24T10:00:00+00:00</updated><id>https://panyu101.github.io/blog/2025/git-account-setup</id><content type="html" xml:base="https://panyu101.github.io/blog/2025/git-account-setup/"><![CDATA[<p>When you have multiple Github/BitBucket accounts on the same computer, you may need to set up them this way to avoid swiching manually.</p> <p><strong>Config ssh</strong></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> ~/.ssh/config

Host github-ox0
    HostName github.com
    User git
    IdentityFile /opt/key/ox0.github.rsa
    IdentitiesOnly <span class="nb">yes

</span>Host github-ratox
    HostName github.com
    User git
    IdentityFile /opt/key/rat-ox.github.rsa
    IdentitiesOnly <span class="nb">yes

</span>Host github-panyu101
    HostName github.com
    User git
    IdentityFile /opt/key/panyu101.github.rsa
    IdentitiesOnly <span class="nb">yes

</span>Host bitbucket-apox0
    HostName bitbucket.org
    User git
    IdentityFile /opt/key/apox0.bitbucket.rsa
    IdentitiesOnly <span class="nb">yes

</span>Host bitbucket-apox1
    HostName bitbucket.org
    User git
    IdentityFile /opt/key/apox1.bitbucket.rsa
    IdentitiesOnly <span class="nb">yes

</span>Host bitbucket-ox0ca
    HostName bitbucket.org
    User git
    IdentityFile /opt/key/ox0ca.bitbucket.rsa
    IdentitiesOnly <span class="nb">yes

</span>Host <span class="k">*</span>
    AddKeysToAgent <span class="nb">yes</span>
</code></pre></div></div> <p><strong>Make directory the same name as the repo</strong> Add .envrc to each directory</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> .envrc

<span class="c">#!/bin/bash</span>

git config user.email <span class="s2">"FIRST.LAST@XXXX.XX"</span>
git config user.name <span class="s2">"ox0"</span>
</code></pre></div></div> <p><strong>Add this into .gitignore</strong></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.envrc
</code></pre></div></div> <p><strong>Specify user/account when clone the repo</strong></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># instead of using normal SSH clone commond like this:</span>
git clone git@github.com:panyu101/panyu101.github.io.git

<span class="c"># Use this to specify the user/account</span>
git clone git@github-panyu101:panyu101/panyu101.github.io.git
</code></pre></div></div> <p><strong>Make sure the difference in two commond above!</strong></p> <p><strong>Verify the user/account</strong></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># git remote -v</span>
origin  git@github-ox0:ox0/ox0.github.io.git <span class="o">(</span>fetch<span class="o">)</span>
origin  git@github-ox0:ox0/ox0.github.io.git <span class="o">(</span>push<span class="o">)</span>

<span class="c"># ssh -T git@github-ox0</span>
Hi ox0! You<span class="s1">'ve successfully authenticated, but GitHub does not provide shell access.
</span></code></pre></div></div>]]></content><author><name></name></author><category term="git"/><category term="apan"/><category term="tech"/><summary type="html"><![CDATA[git account setup with .envr and .ssh/config to avoid extra command typing]]></summary></entry><entry><title type="html">use envrc in awscli</title><link href="https://panyu101.github.io/blog/2025/use-envrc-in-awscli/" rel="alternate" type="text/html" title="use envrc in awscli"/><published>2025-02-23T10:00:00+00:00</published><updated>2025-02-23T10:00:00+00:00</updated><id>https://panyu101.github.io/blog/2025/use-envrc-in-awscli</id><content type="html" xml:base="https://panyu101.github.io/blog/2025/use-envrc-in-awscli/"><![CDATA[<p>This example shows how to use envrc in an aws cli to go through all directories to run the same aws cli:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for </span>i <span class="k">in</span> <span class="si">$(</span><span class="nb">ls</span> <span class="nt">-d</span> <span class="k">*</span>|grep <span class="nt">-v</span> zz<span class="si">)</span><span class="p">;</span><span class="k">do </span><span class="nb">cd</span> <span class="nv">$i</span><span class="p">;</span><span class="nb">source</span> .envrc<span class="p">;</span>aws eks list-insights <span class="nt">--cluster-name</span> <span class="nv">$EKS_CLUSTER</span>|gg <span class="nt">-A9</span> <span class="s2">"kube-proxy version skew"</span>|gg <span class="s2">"status"</span><span class="p">;</span><span class="nb">cd</span> -<span class="p">;</span><span class="k">done</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="aws"/><category term="apan"/><category term="tech"/><summary type="html"><![CDATA[Sample of usage of envrc in awscli]]></summary></entry><entry><title type="html">k8s image update</title><link href="https://panyu101.github.io/blog/2025/k8s-image-update/" rel="alternate" type="text/html" title="k8s image update"/><published>2025-02-22T20:08:00+00:00</published><updated>2025-02-22T20:08:00+00:00</updated><id>https://panyu101.github.io/blog/2025/k8s-image-update</id><content type="html" xml:base="https://panyu101.github.io/blog/2025/k8s-image-update/"><![CDATA[<p>Check kube-proxy “insightStatus”</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws eks list-insights <span class="nt">--cluster-name</span> panel-eks-prod|gg <span class="nt">-C9</span> <span class="nt">-i</span> proxy
</code></pre></div></div> <p>Check the current version at the EKS Cluster</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl describe daemonset kube-proxy <span class="nt">-n</span> kube-system | gg Image
</code></pre></div></div> <p>You should see the output like this:</p> <p><code>Image: 602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.31.2-eksbuild.3</code></p> <p>Or use this command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl get daemonset kube-proxy <span class="nt">-n</span> kube-system <span class="nt">-o</span> <span class="nv">jsonpath</span><span class="o">=</span><span class="s1">'{.spec.template.spec.containers[?(@.name=="kube-proxy")].image}'</span><span class="p">;</span><span class="nb">echo</span>
</code></pre></div></div> <p>And you should have output like this:</p> <p><code>602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.31.2-eksbuild.3</code></p> <p>Both outputs above, should be the same version.</p> <p>Find out compatiable build with this command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aws eks describe-addon-versions <span class="nt">--addon-name</span> kube-proxy <span class="nt">--kubernetes-version</span> 1.31 <span class="nt">--output</span> text
</code></pre></div></div> <p>Say it is <code>v1.31.1-eksbuild.2</code></p> <p>The set this image to the daemonset</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl <span class="nb">set </span>image daemonset kube-proxy kube-proxy<span class="o">=</span>602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.31.1-eksbuild.2 <span class="nt">-n</span> kube-system
</code></pre></div></div> <p>After set, you may run all check commands above to verify.</p> <p><strong>Extra:</strong> Restart the daemon set</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl rollout restart daemonset kube-proxy <span class="nt">-n</span> kube-system
</code></pre></div></div>]]></content><author><name></name></author><category term="k8s"/><category term="apan"/><category term="tech"/><summary type="html"><![CDATA[Update k8s image]]></summary></entry><entry><title type="html">sample page creation</title><link href="https://panyu101.github.io/blog/2025/sample-page-creation/" rel="alternate" type="text/html" title="sample page creation"/><published>2025-02-20T09:20:00+00:00</published><updated>2025-02-20T09:20:00+00:00</updated><id>https://panyu101.github.io/blog/2025/sample-page-creation</id><content type="html" xml:base="https://panyu101.github.io/blog/2025/sample-page-creation/"><![CDATA[<p><strong>Step 1:</strong> Create a Data File</p> <p>First, create a YAML data file in the _data folder of your al-folio project. Name it sample.yml and add some simple data, like this:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># _data/sample.yml</span>

greeting:
  title: <span class="s2">"Welcome to My Site!"</span>
  message: <span class="s2">"This is a sample message from my data file."</span>
  items:
    - <span class="s2">"Item 1"</span>
    - <span class="s2">"Item 2"</span>
    - <span class="s2">"Item 3"</span>
</code></pre></div></div> <p>This file defines a greeting object with a title, message, and a list of items.</p> <p><strong>Step 2:</strong> Create or Edit a Page to Display the Data</p> <p>Al-folio uses Jekyll, so we’ll create a new page or modify an existing one (e.g., index.md or a new _pages/sample.md) to display this data. Let’s create a new page for clarity.</p> <p>Create _pages/sample.md</p> <p>Add a new file in the _pages folder called sample.md with the following content:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
---
layout: page
permalink: /sample/
title: Sample
nav: true
nav_order: 1
---

<span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">data</span><span class="p">.</span><span class="nv">sample</span><span class="p">.</span><span class="nv">greeting</span><span class="w"> </span><span class="cp">%}</span>
  &lt;h1&gt;<span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">data</span><span class="p">.</span><span class="nv">sample</span><span class="p">.</span><span class="nv">greeting</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span>&lt;/h1&gt;
  &lt;p&gt;<span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">data</span><span class="p">.</span><span class="nv">sample</span><span class="p">.</span><span class="nv">greeting</span><span class="p">.</span><span class="nv">message</span><span class="w"> </span><span class="cp">}}</span>&lt;/p&gt;
  &lt;ul&gt;
    <span class="cp">{%</span><span class="w"> </span><span class="nt">for</span><span class="w"> </span><span class="nv">item</span><span class="w"> </span><span class="nt">in</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">data</span><span class="p">.</span><span class="nv">sample</span><span class="p">.</span><span class="nv">greeting</span><span class="p">.</span><span class="nv">items</span><span class="w"> </span><span class="cp">%}</span>
      &lt;li&gt;<span class="cp">{{</span><span class="w"> </span><span class="nv">item</span><span class="w"> </span><span class="cp">}}</span>&lt;/li&gt;
    <span class="cp">{%</span><span class="w"> </span><span class="nt">endfor</span><span class="w"> </span><span class="cp">%}</span>
  &lt;/ul&gt;
<span class="cp">{%</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">%}</span>

</code></pre></div></div> <p><strong>Explanation:</strong></p> <p>layout: page uses al-folio’s page layout for a standard page structure.</p> <p>permalink sets the URL (e.g., /sample/).</p> <p>site.data.mydata.greeting accesses the data from _data/mydata.yml. site.data is how Jekyll exposes data files.</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
Liquid templating (<span class="cp">{%</span><span class="w"> </span><span class="cp">%}</span> and <span class="cp">{{</span><span class="w"> </span><span class="cp">}}</span>) is used to render the data dynamically:
<span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">data</span><span class="p">.</span><span class="nv">sample</span><span class="p">.</span><span class="nv">greeting</span><span class="p">.</span><span class="nv">title</span><span class="w"> </span><span class="cp">}}</span> displays the title.
<span class="cp">{{</span><span class="w"> </span><span class="nv">site</span><span class="p">.</span><span class="nv">data</span><span class="p">.</span><span class="nv">sample</span><span class="p">.</span><span class="nv">greeting</span><span class="p">.</span><span class="nv">message</span><span class="w"> </span><span class="cp">}}</span> displays the message.
A for loop iterates over site.data.sample.greeting.items to create a list.

</code></pre></div></div> <p>You can also style the output using al-folio’s CSS classes (e.g., d-flex, p-2, etc.) or add custom CSS in assets/css/main.scss.</p>]]></content><author><name></name></author><category term="web"/><category term="apan"/><category term="tech"/><summary type="html"><![CDATA[set up a sample page]]></summary></entry><entry><title type="html">market</title><link href="https://panyu101.github.io/blog/2025/market/" rel="alternate" type="text/html" title="market"/><published>2025-02-18T20:50:00+00:00</published><updated>2025-02-18T20:50:00+00:00</updated><id>https://panyu101.github.io/blog/2025/market</id><content type="html" xml:base="https://panyu101.github.io/blog/2025/market/"><![CDATA[<p>The rendered bar chart illustrates market dollars (thousands) from 2024 to 2030:</p> <pre><code class="language-chartjs">{
  "type": "bar",
  "data": {
    "labels": ["2024", "2025", "2026", "2027", "2028", "2029", "2030"],
    "datasets": [
      {
        "label": "Market dollars (thousands)",
        "data": [462223, 462223, 462223, 462223, 462223, 462223, 462223],
        "backgroundColor": "rgba(54, 162, 235, 0.6)",
        "borderColor": "rgba(54, 162, 235, 1)",
        "borderWidth": 1
      }
    ]
  },
  "options": {
    "scales": {
      "y": {
        "beginAtZero": true
      }
    }
  }
}
</code></pre>]]></content><author><name></name></author><category term="chart"/><category term="apan"/><category term="finance"/><summary type="html"><![CDATA[market since end of 2024]]></summary></entry><entry><title type="html">git commit and push with random message tag</title><link href="https://panyu101.github.io/blog/2025/git-commit-and-push/" rel="alternate" type="text/html" title="git commit and push with random message tag"/><published>2025-02-17T20:50:00+00:00</published><updated>2025-02-17T20:50:00+00:00</updated><id>https://panyu101.github.io/blog/2025/git-commit-and-push</id><content type="html" xml:base="https://panyu101.github.io/blog/2025/git-commit-and-push/"><![CDATA[<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># one line git commit and push</span>
git add <span class="nt">-A</span> <span class="o">&amp;&amp;</span> git commit <span class="nt">-a</span> <span class="nt">-m</span> <span class="si">$(</span><span class="nb">date</span> +<span class="s2">"%m-%d-%Y"</span><span class="si">)</span> <span class="o">&amp;&amp;</span> git push

<span class="c"># create a random string in 9 chracters WITHOUT special characters inside.</span>
openssl rand <span class="nt">-base64</span> 48 | <span class="nb">tr</span> <span class="nt">-dc</span> <span class="s1">'A-Za-z0-9'</span> | <span class="nb">fold</span> <span class="nt">-w</span> 9 | <span class="nb">head</span> <span class="nt">-n</span> 1

<span class="c"># git commit and push with random message tag</span>
git add <span class="nt">-A</span> <span class="o">&amp;&amp;</span> git commit <span class="nt">-a</span> <span class="nt">-m</span> <span class="si">$(</span><span class="nb">date</span> +<span class="s2">"%m-%d-%Y"</span><span class="si">)</span>_<span class="si">$(</span>openssl rand <span class="nt">-base64</span> 48 | <span class="nb">tr</span> <span class="nt">-dc</span> <span class="s1">'A-Za-z0-9'</span> | <span class="nb">fold</span> <span class="nt">-w</span> 9 | <span class="nb">head</span> <span class="nt">-n</span> 1<span class="si">)</span> <span class="o">&amp;&amp;</span> git push

</code></pre></div></div> <p><strong>Version of skipping letter I and L in both case to reduce recognizing mistake</strong></p> <p>To get the random string:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>openssl rand <span class="nt">-base64</span> 48 | <span class="nb">tr</span> <span class="nt">-dc</span> <span class="s1">'A-HJ-KM-Za-hj-km-z0-9'</span>
</code></pre></div></div> <p>To combine the git commit and git push command together:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add <span class="nt">-A</span> <span class="o">&amp;&amp;</span> git commit <span class="nt">-a</span> <span class="nt">-m</span> <span class="si">$(</span><span class="nb">date</span> +<span class="s2">"%m-%d-%Y"</span><span class="si">)</span>_<span class="si">$(</span>openssl rand <span class="nt">-base64</span> 48 | <span class="nb">tr</span> <span class="nt">-dc</span> <span class="s1">'A-HJ-KM-Za-hj-km-z0-9'</span> | <span class="nb">fold</span> <span class="nt">-w</span> 9 | <span class="nb">head</span> <span class="nt">-n</span> 1<span class="si">)</span> <span class="o">&amp;&amp;</span> git push
</code></pre></div></div>]]></content><author><name></name></author><category term="git"/><category term="apan"/><category term="tech"/><summary type="html"><![CDATA[git commit and push with random message tag]]></summary></entry><entry><title type="html">a post with image galleries</title><link href="https://panyu101.github.io/blog/2024/photo-gallery/" rel="alternate" type="text/html" title="a post with image galleries"/><published>2024-12-04T01:59:00+00:00</published><updated>2024-12-04T01:59:00+00:00</updated><id>https://panyu101.github.io/blog/2024/photo-gallery</id><content type="html" xml:base="https://panyu101.github.io/blog/2024/photo-gallery/"><![CDATA[<p>The images in this post are all zoomable, arranged into different mini-galleries using different libraries.</p> <h2 id="lightbox2"><a href="https://lokeshdhakar.com/projects/lightbox2/">Lightbox2</a></h2> <p><a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/></a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/></a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg" data-lightbox="roadtrip"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/></a></p> <hr/> <h2 id="photoswipe"><a href="https://photoswipe.com/">PhotoSwipe</a></h2> <div class="pswp-gallery pswp-gallery--single-column" id="gallery--getting-started"> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg" data-pswp-width="1669" data-pswp-height="2500" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg" alt=""/> </a> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-2500.jpg" data-pswp-width="1875" data-pswp-height="2500" data-cropped="true" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/7/img-200.jpg" alt=""/> </a> <a href="https://unsplash.com" data-pswp-src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg" data-pswp-width="2500" data-pswp-height="1666" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg" alt=""/> </a> <div> <a href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-2500.jpg" data-pswp-width="2500" data-pswp-height="1667" target="_blank"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-200.jpg" alt=""/> </a> </div> </div> <hr/> <h2 id="spotlight-js"><a href="https://nextapps-de.github.io/spotlight/">Spotlight JS</a></h2> <div class="spotlight-group"> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/> </a> </div> <div class="spotlight-group"> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/4/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/4/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/5/img-200.jpg"/> </a> <a class="spotlight" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-2500.jpg"> <img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/6/img-200.jpg"/> </a> </div> <hr/> <h2 id="venobox"><a href="https://veno.es/venobox/">Venobox</a></h2> <p><a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/1/img-200.jpg"/></a> <a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/2/img-200.jpg"/></a> <a class="venobox" data-gall="myGallery" href="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-2500.jpg"><img src="https://cdn.photoswipe.com/photoswipe-demo-images/photos/3/img-200.jpg"/></a></p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what included image galleries could look like]]></summary></entry></feed>